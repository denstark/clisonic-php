#!/usr/bin/php
<?php

$script = 'daemon';
require_once('initialize.php');

$player = new csPlayer();
$bufferTime = csSettings::get(CS_BUFFER_LENGTH);

// set some initial values so oldXXX can be set to something
$timeLeft = 0;
$queue = null;

// force the next song in the queue to play
$forceNext = false;

// seconds until next check-in with mplayer
$check = 0;

// has the next song in the queue been processed?
$allSet = false;

// can we expect timeLeft to increase (did we start the next song)
$expectJump = false;

while (true) 
{
  // what's in the message queue?
  while ($msg = csMsgQueue::getNext())
  {
    logOut("Received message: $msg");
    
    $msg = trim($msg);
    
    switch ($msg)
    {
      case 'pause':
        $player->pause();
        break;
      case 'start':
      case 'restart':
        $player->play();
        csQueue::get()->decrementPos();
        $forceNext = true;
        break;
      case 'previous':
        $player->play();
        csQueue::get()->decrementPos(2);
        $forceNext = true;
        break;
      case 'next':
        $player->play();
        csQueue::get()->incrementPos();
        $forceNext = true;
        break;
      case 'stop':
        $player->stop();
        break;
      case 'exit':
        exit;
        break;
    }
  }
  
  if ($forceNext)
    $check = 0;
  
  $check--;
  
  if ($check <= 0 && !$player->isPaused() && !$player->isStopped())
  {
    $oldTimeLeft = $timeLeft;
    $timeLeft = $player->getTimeLeft();
    
    // if a song has just finished, timeleft may return its full duration again
    // we protect against this happening when we haven't told the next song
    // to play yet
    if ($forceNext || ($timeLeft > $oldTimeLeft && !$expectJump))
    {
      $forceNext = false;
      $timeLeft = 0;
    }
    
    $expectJump = false;
    
    logOut("Timeleft: $timeLeft");
    
    // should we be loading or playing the next song?
    if ($timeLeft <= $bufferTime)
    {
      // update the queue
      $oldQueue = $queue;
      $queue = csQueue::get();
      
      // the queue has changed, don't assume we've processed the next song
      if ($queue != $oldQueue)
        $allSet = false;
      
      $nextSong = $queue->getNextPos();
      $entry = $queue->getNextEntry();

      if (!is_null($entry))
      {
        $justProcessed = false;
        
        if (!$allSet)
        {
          // we cache this value so we don't do reads every frame
          $allSet = $entry->wasProcessed();
          
          if (!$allSet)
          {
            logOut('Processing entry!');
            $allSet = true;
            $justProcessed = true;
            $player->loadSong($entry);
          }
        }

        // should we start the next song?
        if ($timeLeft <= 0)
        {
          // give curl a second to catch up
          if ($justProcessed)
          {
            sleep(1);
          }
          
          logOut('Playing entry!');
          $expectJump = true;
          $allSet = false;
          $queue->setPos($nextSong);
          $player->playSong($entry);
        }
      }
    }
  
    // there are more than 30 seconds left in the current song
    // unless we receive input to take action, we'll check again in 20
    if ($timeLeft > 30 )
    {
      $check = 20;
    }
    // there are more than 10 seconds left in the current song
    // we'll check back in 5
    elseif ($timeLeft > 10)
    {
      $check = 5;
    }
    // the song will be ending soon, check each frame
    else
    {
      $check = 0;
    }
  }
  
  sleep(1);
}