#!/usr/bin/php
<?php
require('settings.inc.php');
require('functions.php');

// Until an autoloader has been built
require_once('lib/player.class.php');
require_once('lib/memory/base.memory.php');
require_once('lib/memory.class.php');
require_once('lib/memory/memcache.memory.php');


createFifo($mplayerfifo);
startMplayer();


$timeLeft = 0;

$kg = true;

while($kg) 
{
  $queue = csMemory::get(SHM_QUEUE_KEY);
  if ( is_array($queue) && ($timeLeft <= $bufferTime) )
  {
    $count = 0;
    foreach ($queue as &$entry)
    {
      $p = ($entry['p'] == 0); // If $entry['p'] is 0, then it is false and has not been processed yet
      if ($p) { // Since it's false, we process it
        $id = $entry['id'];
        loadSong($entry['id']);
        $timeLeft = $entry['duration'];
        csMemory::set(SHM_TIMELEFT_KEY, $timeLeft);
        $currentPos = $count;
        csMemory::set(SHM_CQ_POS_KEY, $currentPos);
        echo "Processing entry!\n";
        $entry['p'] = 1;
        break 1;
      }
      $count++;
    }
  }
  csMemory::set(SHM_QUEUE_KEY, $queue);

  sleep(1);
  $timeLeft = csMemory::get(SHM_TIMELEFT_KEY);
  $isPaused = csMemory::get(SHM_ISPAUSED_KEY);
  if (!$isPaused)
    $timeLeft--;
  csMemory::set(SHM_TIMELEFT_KEY, $timeLeft);
  echo "timeleft: $timeLeft\n";
  $mainpid = csMemory::get(SHM_PID_KEY);
  system("ps -p $mainpid > /dev/null", $retval);
  $kg = ($retval == 0);

}